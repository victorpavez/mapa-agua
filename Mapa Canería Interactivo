<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="utf-8" />
  <title>Simulador de Ca침er칤a</title>
  <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />
  <style>
    html, body { margin: 0; padding: 0; height: 100%; font-family: 'Segoe UI', sans-serif; }
    #map { width: 100%; height: 100vh; }
    .panel-boton {
      position: absolute;
      top: 20px;
      right: 20px;
      background: white;
      padding: 10px;
      border-radius: 10px;
      box-shadow: 0 0 10px rgba(0,0,0,0.3);
      z-index: 1000;
    }
    .panel-boton button {
      padding: 10px 20px;
      font-size: 16px;
      background: #3498db;
      color: white;
      border: none;
      border-radius: 5px;
      cursor: pointer;
    }
    .panel-boton button:hover {
      background: #2980b9;
    }
  </style>
</head>
<body>
  <div id="map"></div>
  <div class="panel-boton" id="panelCano" style="display:none;">
    <button onclick="hacerCaneria()">游뛇 Hacer ca침er칤a</button>
  </div>

  <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>
  <script>
    const map = L.map("map").setView([-37.403, -68.931], 16);
    L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png", {
      attribution: "춸 OpenStreetMap contributors",
      maxZoom: 20,
    }).addTo(map);

    let puntoSeleccionado = null;

    // Cargar los lotes (solo para prueba, pod칠s poner tu archivo GeoJSON real)
    fetch("AGUSIONO.geojson")
      .then(res => res.json())
      .then(data => {
        L.geoJSON(data, {
          onEachFeature: function (feature, layer) {
            layer.on("click", () => {
              if (feature.properties.agua_40m === "NO") {
                puntoSeleccionado = layer.getBounds().getCenter();
                document.getElementById("panelCano").style.display = "block";
              }
            });
          },
          style: f => ({ color: f.properties.agua_40m === "SI" ? "green" : "red", weight: 1 })
        }).addTo(map);
      });

    function hacerCaneria() {
      if (!puntoSeleccionado) return;
      // Ac치 llam치s a la funci칩n para calcular la ruta desde el punto
      console.log("Calculando ruta desde:", puntoSeleccionado);
      mostrarRutaDesde(puntoSeleccionado);
    }

    function mostrarRutaDesde(punto) {
      // Ejemplo: dibujar una l칤nea falsa
      const destino = [punto.lat + 0.001, punto.lng + 0.001];
      L.polyline([punto, destino], { color: "blue", weight: 4 }).addTo(map);
    }
  </script>
</body>
</html>
